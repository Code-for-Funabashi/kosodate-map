{"version":3,"sources":["components/Point.tsx","components/PointLayer.tsx","components/Map.tsx","components/Icons.ts","components/KosodateMap.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Point","props","Marker","position","point","lat","lng","icon","Popup","type","name","details","address","phone_number","loadFeatures","url","a","axios","get","res","data","Map","MapContainer","center","zoom","tap","scrollWheelZoom","style","height","TileLayer","attribution","pointCatalog","map","item","pointMeta","useState","features","setFeatures","useEffect","then","feature","PointLayer","greenIcon","L","Icon","iconUrl","shadowUrl","iconSize","iconAnchor","popupAnchor","shadowSize","Kosodate","App","path","component","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAIaA,EAAQ,SAACC,GAKpB,OACE,cAACC,EAAA,EAAD,CAAQC,SAAU,CAACF,EAAMG,MAAMC,IAAKJ,EAAMG,MAAME,KAAMC,KAAMN,EAAMM,KAAlE,SACE,eAACC,EAAA,EAAD,4BACOP,EAAMQ,KACX,uBAFF,iBAGOR,EAAMG,MAAMM,KACjB,uBAJF,iBAKOT,EAAMG,MAAMO,QAAQC,QACzB,uBANF,6BAOSX,EAAMG,MAAMO,QAAQE,mBCK7BC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACDC,IAAMC,IAAiBH,GADtB,cACbI,EADa,yBAEZA,EAAIC,MAFQ,2CAAH,sDClBZjB,EAA6B,CAAC,UAAW,UAoBhCkB,EAlBH,SAACpB,GACX,OACE,eAACqB,EAAA,EAAD,CACEC,OAAQpB,EACRqB,KAAM,GACNC,KAAK,EACLC,iBAAiB,EACjBC,MAAO,CAAEC,OAAQ,SALnB,UAOE,cAACC,EAAA,EAAD,CACEC,YAAY,qIACZf,IAAI,uDAELd,EAAM8B,aAAaC,KAAI,SAACC,GAAD,ODQJ,SAACC,GAA0B,IAAD,EAClBC,mBAAsB,IADJ,mBAC3CC,EAD2C,KACjCC,EADiC,KAOlD,OAJAC,qBAAU,WACRxB,EAAaoB,EAAUnB,KAAKwB,MAAK,SAACnB,GAAD,OAAUiB,EAAYjB,QACtD,CAACc,IAEGE,EAASJ,KAAI,SAACQ,GAAD,OAClB,cAAC,EAAD,CACEpC,MAAOoC,EACP/B,KAAMyB,EAAUzB,KAChBF,KAAM2B,EAAU3B,MACXiC,EAAQ9B,SCpBqB+B,CAAWR,U,gBClBtCS,EAAY,IAAIC,IAAEC,KAAK,CAClCC,QACE,gGACFC,UACE,0EACFC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,IAClBC,WAAY,CAAC,GAAI,MCNbnB,EAA4B,CAChC,CACEhB,IACE,wHACFN,KAAM,uCACNF,KAAMmC,GAER,CACE3B,IACE,yHACFN,KAAM,iCACNF,KAAMmC,GAER,CACE3B,IACE,yHACFN,KAAM,iCACNF,KAAMmC,GAER,CACE3B,IACE,yHACFN,KAAM,uCACNF,KAAMmC,GAER,CACE3B,IACE,8GACFN,KAAM,qBACNF,KDpBoB,IAAIoC,IAAEC,KAAK,CACjCC,QACE,+FACFC,UACE,0EACFC,SAAU,CAAC,GAAI,IACfC,WAAY,CAAC,GAAI,IACjBC,YAAa,CAAC,GAAI,IAClBC,WAAY,CAAC,GAAI,QCoBJC,EAJE,WACf,OAAO,cAAC,EAAD,CAAKpB,aAAcA,KCxBbqB,EAVH,WACV,OACE,8BACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,YAAYC,UAAWH,IACnC,cAAC,IAAD,CAAMI,GAAG,YAAT,wDCKOC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.475459f8.chunk.js","sourcesContent":["import type { Icon } from \"leaflet\";\nimport { Marker, Popup } from \"react-leaflet\";\nimport { PointInfo } from \"./PointLayer\";\n\nexport const Point = (props: {\n  point: PointInfo;\n  type: string;\n  icon: Icon;\n}) => {\n  return (\n    <Marker position={[props.point.lat, props.point.lng]} icon={props.icon}>\n      <Popup>\n        種別: {props.type}\n        <br />\n        名前: {props.point.name}\n        <br />\n        住所: {props.point.details.address}\n        <br />\n        電話番号: {props.point.details.phone_number}\n      </Popup>\n    </Marker>\n  );\n};\n","import axios from \"axios\";\nimport type { Icon } from \"leaflet\";\nimport { useState, useEffect } from \"react\";\nimport { Point } from \"./Point\";\n\nexport interface PointMeta {\n  url: string;\n  type: string;\n  icon: Icon;\n}\n\ninterface PointInfoDetail {\n  address?: string;\n  phone_number?: string;\n}\n\nexport interface PointInfo {\n  name: string;\n  lat: number;\n  lng: number;\n  details: PointInfoDetail;\n}\n\nconst loadFeatures = async (url: string) => {\n  const res = await axios.get<[PointInfo]>(url);\n  return res.data;\n};\n\nexport const PointLayer = (pointMeta: PointMeta) => {\n  const [features, setFeatures] = useState<PointInfo[]>([]);\n\n  useEffect(() => {\n    loadFeatures(pointMeta.url).then((data) => setFeatures(data));\n  }, [pointMeta]);\n\n  return features.map((feature) => (\n    <Point\n      point={feature}\n      type={pointMeta.type}\n      icon={pointMeta.icon}\n      key={feature.name}\n    />\n  ));\n};\n","import { MapContainer, TileLayer } from \"react-leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport { PointLayer, PointMeta } from \"./PointLayer\";\n\n//船橋市役所のlat lon\nconst position: [number, number] = [35.694722, 139.9825];\n\nconst Map = (props: { pointCatalog: PointMeta[] }) => {\n  return (\n    <MapContainer\n      center={position}\n      zoom={13}\n      tap={false} // to support safari https://github.com/Leaflet/Leaflet/issues/7266\n      scrollWheelZoom={true}\n      style={{ height: \"100vh\" }}\n    >\n      <TileLayer\n        attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors | <a href=\"http://code4funabashi.org/\">CodeForFunabashi</a>'\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n      />\n      {props.pointCatalog.map((item) => PointLayer(item))}\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","import L from \"leaflet\";\n\nexport const greenIcon = new L.Icon({\n  iconUrl:\n    \"//raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-green.png\",\n  shadowUrl:\n    \"//cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n});\n\nexport const blueIcon = new L.Icon({\n  iconUrl:\n    \"//raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-blue.png\",\n  shadowUrl:\n    \"//cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png\",\n  iconSize: [25, 41],\n  iconAnchor: [12, 41],\n  popupAnchor: [1, -34],\n  shadowSize: [41, 41],\n});\n","import Map from \"./Map\";\nimport { PointMeta } from \"./PointLayer\";\nimport { greenIcon, blueIcon } from \"./Icons\";\n\nconst pointCatalog: PointMeta[] = [\n  {\n    url:\n      \"https://raw.githubusercontent.com/Code-for-Funabashi/open-data-parser/main/data/kosodate-map/syokibohoikuichiran.json\",\n    type: \"小規模保育園\",\n    icon: greenIcon,\n  },\n  {\n    url:\n      \"https://raw.githubusercontent.com/Code-for-Funabashi/open-data-parser/main/data/kosodate-map/korituhoikusyoitiran.json\",\n    type: \"公立保育園\",\n    icon: greenIcon,\n  },\n  {\n    url:\n      \"https://raw.githubusercontent.com/Code-for-Funabashi/open-data-parser/main/data/kosodate-map/sirituhoikusyoitiran.json\",\n    type: \"私立保育園\",\n    icon: greenIcon,\n  },\n  {\n    url:\n      \"https://raw.githubusercontent.com/Code-for-Funabashi/open-data-parser/main/data/kosodate-map/ninteikodomoenitiran.json\",\n    type: \"認定こども園\",\n    icon: greenIcon,\n  },\n  {\n    url:\n      \"https://raw.githubusercontent.com/Code-for-Funabashi/open-data-parser/main/data/kosodate-map/kouminkan.json\",\n    type: \"公民館\",\n    icon: blueIcon,\n  },\n];\n\nconst Kosodate = () => {\n  return <Map pointCatalog={pointCatalog} />;\n};\n\nexport default Kosodate;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Kosodate from \"./components/KosodateMap\";\n\nconst App = () => {\n  return (\n    <div>\n      <Router>\n        <Route path=\"/kosodate\" component={Kosodate} />\n        <Link to=\"/kosodate\">子育てマップ</Link>\n      </Router>\n    </div>\n  );\n};\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}